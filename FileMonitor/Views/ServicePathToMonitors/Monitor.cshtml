@model IEnumerable<FileMonitor.DataDB.ServiceViewModel>

@{
    ViewData["Title"] = "Monitor";
}

 
<head>

<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />

<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>

<style>
    h1{
        color: black;
        font-size: 45px;
        text-align: center;
        }
    
    th{        
        border: 1px solid black;
        border-collapse: collapse;
        text-align: center;
        padding: 10px;
        background-color: ButtonFace;
        cursor: pointer;
        }


    td{
        border: 1px solid black;
        border-collapse: collapse;
        text-align: center;
        padding: 5px;
        white-space: nowrap;
        }


 table tr th:nth-child(8), table tr td:nth-child(8){
 display:none;
}

.Failed {
    background-color: red;
    color: white;
}
</style>

</head>


<h1>RLV/XMS File Monitor</h1>
<br />
<br />
<br />

<table id="myTable" style="margin-left: -15%; font-size: 12px; ">
     <thead>
            <tr>
                <th onclick="sortTable(0)" style="white-space: nowrap;">Service Path Id</th>
                <th onclick="sortTable(1)" style="white-space: nowrap;">Service Name</th>                
                <th onclick="sortTable(2)" style="white-space: nowrap;">File Pattern</th>
                <th onclick="sortTable(3)" style="white-space: nowrap;">Check Interval (Minutes)</th>
                <th onclick="sortTable(4)" style="white-space: nowrap;">Last File Received</th>
                <th onclick="sortTable(5)" style="white-space: nowrap;">last Received Date/Time (CDT)</th>
                <th onclick="sortTable(6)" style="white-space: nowrap;">Files Count today</th>
                <th onclick="sortTable(7)" style="white-space: nowrap;">Files Count Yesteday</th>
                <th>Status</th>

            </tr>
    </thead>
    
    <tbody class="table">
        @foreach (var item in Model) 
        {
            <tr>                
                <td>@Html.DisplayFor(modelItem => item.ServicePathSysId)</td> 
                <td>@Html.DisplayFor(modelItem => item.ServiceName)</td> 
                <td>@Html.DisplayFor(modelItem => item.FileNamePattern)</td>
                <td>@Html.DisplayFor(modelItem => item.TimeCheckInterval)</td>
                <td>@Html.DisplayFor(modelItem => item.LastFileReceived)</td>    
                <td>@Html.DisplayFor(modelItem => item.LastChangeDateTime)</td>


                @{
                    var ServicePathId = "FileDir/" + item.ServicePathSysId;
                    <td><a href=@ServicePathId>@Html.DisplayFor(modelItem => item.NumberOfFilesForToday)</a></td>
                 }

                
               

                <td>@Html.DisplayFor(modelItem => item.NumberOfFilesForYesterday)</td>
                <td class="status">@Html.DisplayFor(modelItem => item.Status)</td>
            </tr> 
        }
    </tbody>

</table>


<script type="text/javascript">
 $(function() {

        $(".table").find("tr").each(function () {
           var status= $(this).find(".status").html();  
           if(status=="Red Alert")
             {
                    $(this).addClass("Failed")
             }
        });
    });
</script>




<script>
function sortTable(n) {
  var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
  table = document.getElementById("myTable");
  switching = true;
  // Set the sorting direction to ascending:
  dir = "asc";
  /* Make a loop that will continue until
  no switching has been done: */
  while (switching) {
    // Start by saying: no switching is done:
    switching = false;
    rows = table.rows;
    /* Loop through all table rows (except the
    first, which contains table headers): */
    for (i = 1; i < (rows.length - 1); i++) {
      // Start by saying there should be no switching:
      shouldSwitch = false;
      /* Get the two elements you want to compare,
      one from current row and one from the next: */
      x = rows[i].getElementsByTagName("TD")[n];
      y = rows[i + 1].getElementsByTagName("TD")[n];
      /* Check if the two rows should switch place,
      based on the direction, asc or desc: */
      if (dir == "asc") {
        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
          // If so, mark as a switch and break the loop:
          shouldSwitch = true;
          break;
        }
      } else if (dir == "desc") {
        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
          // If so, mark as a switch and break the loop:
          shouldSwitch = true;
          break;
        }
      }
    }
    if (shouldSwitch) {
      /* If a switch has been marked, make the switch
      and mark that a switch has been done: */
      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
      switching = true;
      // Each time a switch is done, increase this count by 1:
      switchcount ++;
    } else {
      /* If no switching has been done AND the direction is "asc",
      set the direction to "desc" and run the while loop again. */
      if (switchcount == 0 && dir == "asc") {
        dir = "desc";
        switching = true;
      }
    }
  }
}
</script>